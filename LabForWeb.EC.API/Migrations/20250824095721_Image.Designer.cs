// <auto-generated />
using System;
using LabForWeb.EC.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabForWeb.EC.API.Migrations
{
    [DbContext(typeof(ECContext))]
    [Migration("20250824095721_Image")]
    partial class Image
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoriaProdotto", b =>
                {
                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<int>("ProdottiId")
                        .HasColumnType("int");

                    b.HasKey("CategorieId", "ProdottiId");

                    b.HasIndex("ProdottiId");

                    b.ToTable("CategoriaProdotto");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Categorie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Articoli Sportivi"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Elettromestici"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Abbigliamento per la coppia"
                        });
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.Indirizzo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CAP")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.Property<string>("CognomeCitofono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Comune")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("InfoIndirizzo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinciaSigla")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("ScalaInterno")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.Property<string>("Via")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.HasKey("Id");

                    b.HasIndex("CAP");

                    b.HasIndex("UtenteId");

                    b.ToTable("Indirizzi");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.Ordine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anno")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IndirizzoId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<short>("Stato")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Data");

                    b.HasIndex("IndirizzoId");

                    b.HasIndex("Stato");

                    b.HasIndex("Numero", "Anno")
                        .IsUnique();

                    b.ToTable("Ordini");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.OrdineDettaglio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrdineId")
                        .HasColumnType("int");

                    b.Property<int>("ProdottoId")
                        .HasColumnType("int");

                    b.Property<short>("Quantita")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ProdottoId");

                    b.HasIndex("OrdineId", "ProdottoId")
                        .IsUnique();

                    b.ToTable("OrdineDettagli");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.PartitaIVA", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NumeroPIVA")
                        .IsRequired()
                        .HasColumnType("char(11)");

                    b.Property<string>("NumeroUnico")
                        .IsRequired()
                        .HasColumnType("char(7)");

                    b.Property<string>("PEC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NumeroPIVA")
                        .IsUnique();

                    b.ToTable("PartitaIVAs");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.Prodotto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescrizioneBreve")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<short>("Giacenza")
                        .HasColumnType("smallint");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<decimal>("Prezzo")
                        .HasColumnType("money");

                    b.Property<bool>("Visibile")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Attivo");

                    b.HasIndex("Visibile");

                    b.ToTable("Prodotti");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodiceFiscale")
                        .IsRequired()
                        .HasColumnType("char(16)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<bool>("NotificheWA")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Cognome");

                    b.ToTable("Utenti");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CodiceFiscale = "",
                            Cognome = "Admin",
                            Email = "admin@admin.com",
                            Nome = "Admin",
                            NotificheWA = true,
                            Telefono = ""
                        });
                });

            modelBuilder.Entity("CategoriaProdotto", b =>
                {
                    b.HasOne("LabForWeb.EC.DAL.Models.Categoria", null)
                        .WithMany()
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabForWeb.EC.DAL.Models.Prodotto", null)
                        .WithMany()
                        .HasForeignKey("ProdottiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.Indirizzo", b =>
                {
                    b.HasOne("LabForWeb.EC.DAL.Models.Utente", "Utente")
                        .WithMany("Indirizzi")
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.Ordine", b =>
                {
                    b.HasOne("LabForWeb.EC.DAL.Models.Indirizzo", "Indirizzo")
                        .WithMany("Ordini")
                        .HasForeignKey("IndirizzoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Indirizzo");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.OrdineDettaglio", b =>
                {
                    b.HasOne("LabForWeb.EC.DAL.Models.Ordine", "Ordine")
                        .WithMany("Dettagli")
                        .HasForeignKey("OrdineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabForWeb.EC.DAL.Models.Prodotto", "Prodotto")
                        .WithMany("OrdineDettagli")
                        .HasForeignKey("ProdottoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ordine");

                    b.Navigation("Prodotto");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.PartitaIVA", b =>
                {
                    b.HasOne("LabForWeb.EC.DAL.Models.Utente", "Utente")
                        .WithOne("PartitaIVA")
                        .HasForeignKey("LabForWeb.EC.DAL.Models.PartitaIVA", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.Indirizzo", b =>
                {
                    b.Navigation("Ordini");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.Ordine", b =>
                {
                    b.Navigation("Dettagli");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.Prodotto", b =>
                {
                    b.Navigation("OrdineDettagli");
                });

            modelBuilder.Entity("LabForWeb.EC.DAL.Models.Utente", b =>
                {
                    b.Navigation("Indirizzi");

                    b.Navigation("PartitaIVA");
                });
#pragma warning restore 612, 618
        }
    }
}
